// Generated by BRASS MARS Robot Map PRISM Translator V0.3a - Feb 2017.

mdp

const ET=0;
const RT=1;

global turn:[ET..RT] init ET;



// Robot heading/orientation constants

const H_NORTH=0;
const H_NORTHEAST=1;
const H_EAST=2;
const H_SOUTHEAST=3;
const H_SOUTH=4;
const H_SOUTHWEST=5;
const H_WEST=6;
const H_NORTHWEST=7;


// Map location constants

const INITIAL_LOCATION;
const TARGET_LOCATION;

formula goal = l=TARGET_LOCATION;

formula stop = goal | b<10;

const l1=0;
const l2=1;
const l3=2;
const ls=7;
const l4=3;
const l5=4;
const l6=5;
const l7=6;
const c1=8;
const c2=9;
const l13=12;
const c3=10;
const c4=11;


// Environment process

module env_module
end:bool init false;

	[] true & (turn=ET) & (!stop)->  (turn'=RT);
	[] stop  & !end -> (end'=true);
endmodule


// Robot process

const MAX_BATTERY=32560;
const INITIAL_BATTERY;
const INITIAL_HEADING;
const HALF_SPEED=0;
const FULL_SPEED=1;
const LOC_LO=0;
const LOC_MED=1;
const LOC_HI=2;
const LOC_MODE_RECONF_MAX=2;

formula b_upd_charge = min(b+1253, MAX_BATTERY);

formula b_upd_l1_l2_LOC_HI= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l1_l2_LOC_MED= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l1_l2_LOC_LO= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l1_l2 = k = LOC_LO ? b_upd_l1_l2_LOC_LO : ( k = LOC_MED ? b_upd_l1_l2_LOC_MED : b_upd_l1_l2_LOC_HI );
formula b_upd_l2_l1_LOC_HI= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l2_l1_LOC_MED= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l2_l1_LOC_LO= s=HALF_SPEED? max(0,b-4027) : max(0,b-6582);
formula b_upd_l2_l1 = k = LOC_LO ? b_upd_l2_l1_LOC_LO : ( k = LOC_MED ? b_upd_l2_l1_LOC_MED : b_upd_l2_l1_LOC_HI );
formula b_upd_l2_c1_LOC_HI= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l2_c1_LOC_MED= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l2_c1_LOC_LO= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l2_c1 = k = LOC_LO ? b_upd_l2_c1_LOC_LO : ( k = LOC_MED ? b_upd_l2_c1_LOC_MED : b_upd_l2_c1_LOC_HI );
formula b_upd_l2_c2_LOC_HI= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l2_c2_LOC_MED= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l2_c2_LOC_LO= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l2_c2 = k = LOC_LO ? b_upd_l2_c2_LOC_LO : ( k = LOC_MED ? b_upd_l2_c2_LOC_MED : b_upd_l2_c2_LOC_HI );
formula b_upd_l3_c2_LOC_HI= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l3_c2_LOC_MED= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l3_c2_LOC_LO= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l3_c2 = k = LOC_LO ? b_upd_l3_c2_LOC_LO : ( k = LOC_MED ? b_upd_l3_c2_LOC_MED : b_upd_l3_c2_LOC_HI );
formula b_upd_l3_c3_LOC_HI= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l3_c3_LOC_MED= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l3_c3_LOC_LO= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_l3_c3 = k = LOC_LO ? b_upd_l3_c3_LOC_LO : ( k = LOC_MED ? b_upd_l3_c3_LOC_MED : b_upd_l3_c3_LOC_HI );
formula b_upd_l3_l4_LOC_HI= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l3_l4_LOC_MED= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l3_l4_LOC_LO= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l3_l4 = k = LOC_LO ? b_upd_l3_l4_LOC_LO : ( k = LOC_MED ? b_upd_l3_l4_LOC_MED : b_upd_l3_l4_LOC_HI );
formula b_upd_l4_l3_LOC_HI= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l4_l3_LOC_MED= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l4_l3_LOC_LO= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l4_l3 = k = LOC_LO ? b_upd_l4_l3_LOC_LO : ( k = LOC_MED ? b_upd_l4_l3_LOC_MED : b_upd_l4_l3_LOC_HI );
formula b_upd_l4_ls_LOC_HI= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_l4_ls_LOC_MED= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_l4_ls_LOC_LO= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_l4_ls = k = LOC_LO ? b_upd_l4_ls_LOC_LO : ( k = LOC_MED ? b_upd_l4_ls_LOC_MED : b_upd_l4_ls_LOC_HI );
formula b_upd_l4_l5_LOC_HI= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l4_l5_LOC_MED= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l4_l5_LOC_LO= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l4_l5 = k = LOC_LO ? b_upd_l4_l5_LOC_LO : ( k = LOC_MED ? b_upd_l4_l5_LOC_MED : b_upd_l4_l5_LOC_HI );
formula b_upd_l5_l4_LOC_HI= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l5_l4_LOC_MED= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l5_l4_LOC_LO= s=HALF_SPEED? max(0,b-5225) : max(0,b-7368);
formula b_upd_l5_l4 = k = LOC_LO ? b_upd_l5_l4_LOC_LO : ( k = LOC_MED ? b_upd_l5_l4_LOC_MED : b_upd_l5_l4_LOC_HI );
formula b_upd_l5_l6_LOC_HI= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l5_l6_LOC_MED= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l5_l6_LOC_LO= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l5_l6 = k = LOC_LO ? b_upd_l5_l6_LOC_LO : ( k = LOC_MED ? b_upd_l5_l6_LOC_MED : b_upd_l5_l6_LOC_HI );
formula b_upd_l6_l5_LOC_HI= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l6_l5_LOC_MED= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l6_l5_LOC_LO= s=HALF_SPEED? max(0,b-5110) : max(0,b-7293);
formula b_upd_l6_l5 = k = LOC_LO ? b_upd_l6_l5_LOC_LO : ( k = LOC_MED ? b_upd_l6_l5_LOC_MED : b_upd_l6_l5_LOC_HI );
formula b_upd_l6_c3_LOC_HI= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l6_c3_LOC_MED= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l6_c3_LOC_LO= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l6_c3 = k = LOC_LO ? b_upd_l6_c3_LOC_LO : ( k = LOC_MED ? b_upd_l6_c3_LOC_MED : b_upd_l6_c3_LOC_HI );
formula b_upd_l6_c4_LOC_HI= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l6_c4_LOC_MED= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l6_c4_LOC_LO= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_l6_c4 = k = LOC_LO ? b_upd_l6_c4_LOC_LO : ( k = LOC_MED ? b_upd_l6_c4_LOC_MED : b_upd_l6_c4_LOC_HI );
formula b_upd_l7_c4_LOC_HI= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l7_c4_LOC_MED= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l7_c4_LOC_LO= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_l7_c4 = k = LOC_LO ? b_upd_l7_c4_LOC_LO : ( k = LOC_MED ? b_upd_l7_c4_LOC_MED : b_upd_l7_c4_LOC_HI );
formula b_upd_l7_c1_LOC_HI= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l7_c1_LOC_MED= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l7_c1_LOC_LO= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_l7_c1 = k = LOC_LO ? b_upd_l7_c1_LOC_LO : ( k = LOC_MED ? b_upd_l7_c1_LOC_MED : b_upd_l7_c1_LOC_HI );
formula b_upd_ls_l4_LOC_HI= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_ls_l4_LOC_MED= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_ls_l4_LOC_LO= s=HALF_SPEED? max(0,b-4119) : max(0,b-6642);
formula b_upd_ls_l4 = k = LOC_LO ? b_upd_ls_l4_LOC_LO : ( k = LOC_MED ? b_upd_ls_l4_LOC_MED : b_upd_ls_l4_LOC_HI );
formula b_upd_c1_l2_LOC_HI= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c1_l2_LOC_MED= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c1_l2_LOC_LO= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c1_l2 = k = LOC_LO ? b_upd_c1_l2_LOC_LO : ( k = LOC_MED ? b_upd_c1_l2_LOC_MED : b_upd_c1_l2_LOC_HI );
formula b_upd_c1_l7_LOC_HI= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c1_l7_LOC_MED= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c1_l7_LOC_LO= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c1_l7 = k = LOC_LO ? b_upd_c1_l7_LOC_LO : ( k = LOC_MED ? b_upd_c1_l7_LOC_MED : b_upd_c1_l7_LOC_HI );
formula b_upd_c2_l2_LOC_HI= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c2_l2_LOC_MED= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c2_l2_LOC_LO= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c2_l2 = k = LOC_LO ? b_upd_c2_l2_LOC_LO : ( k = LOC_MED ? b_upd_c2_l2_LOC_MED : b_upd_c2_l2_LOC_HI );
formula b_upd_c2_l3_LOC_HI= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c2_l3_LOC_MED= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c2_l3_LOC_LO= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c2_l3 = k = LOC_LO ? b_upd_c2_l3_LOC_LO : ( k = LOC_MED ? b_upd_c2_l3_LOC_MED : b_upd_c2_l3_LOC_HI );
formula b_upd_c3_l3_LOC_HI= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c3_l3_LOC_MED= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c3_l3_LOC_LO= s=HALF_SPEED? max(0,b-3797) : max(0,b-6431);
formula b_upd_c3_l3 = k = LOC_LO ? b_upd_c3_l3_LOC_LO : ( k = LOC_MED ? b_upd_c3_l3_LOC_MED : b_upd_c3_l3_LOC_HI );
formula b_upd_c3_l6_LOC_HI= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c3_l6_LOC_MED= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c3_l6_LOC_LO= s=HALF_SPEED? max(0,b-4304) : max(0,b-6763);
formula b_upd_c3_l6 = k = LOC_LO ? b_upd_c3_l6_LOC_LO : ( k = LOC_MED ? b_upd_c3_l6_LOC_MED : b_upd_c3_l6_LOC_HI );
formula b_upd_c4_l6_LOC_HI= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c4_l6_LOC_MED= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c4_l6_LOC_LO= s=HALF_SPEED? max(0,b-5502) : max(0,b-7550);
formula b_upd_c4_l6 = k = LOC_LO ? b_upd_c4_l6_LOC_LO : ( k = LOC_MED ? b_upd_c4_l6_LOC_MED : b_upd_c4_l6_LOC_HI );
formula b_upd_c4_l7_LOC_HI= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c4_l7_LOC_MED= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c4_l7_LOC_LO= s=HALF_SPEED? max(0,b-5479) : max(0,b-7534);
formula b_upd_c4_l7 = k = LOC_LO ? b_upd_c4_l7_LOC_LO : ( k = LOC_MED ? b_upd_c4_l7_LOC_MED : b_upd_c4_l7_LOC_HI );
formula b_upd_l1_l13_LOC_HI= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l1_l13_LOC_MED= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l1_l13_LOC_LO= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l1_l13 = k = LOC_LO ? b_upd_l1_l13_LOC_LO : ( k = LOC_MED ? b_upd_l1_l13_LOC_MED : b_upd_l1_l13_LOC_HI );
formula b_upd_l13_l1_LOC_HI= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l13_l1_LOC_MED= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l13_l1_LOC_LO= s=HALF_SPEED? max(0,b-3710) : max(0,b-6374);
formula b_upd_l13_l1 = k = LOC_LO ? b_upd_l13_l1_LOC_LO : ( k = LOC_MED ? b_upd_l13_l1_LOC_MED : b_upd_l13_l1_LOC_HI );
formula b_upd_l2_l13_LOC_HI= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l2_l13_LOC_MED= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l2_l13_LOC_LO= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l2_l13 = k = LOC_LO ? b_upd_l2_l13_LOC_LO : ( k = LOC_MED ? b_upd_l2_l13_LOC_MED : b_upd_l2_l13_LOC_HI );
formula b_upd_l13_l2_LOC_HI= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l13_l2_LOC_MED= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l13_l2_LOC_LO= s=HALF_SPEED? max(0,b-3200) : max(0,b-6039);
formula b_upd_l13_l2 = k = LOC_LO ? b_upd_l13_l2_LOC_LO : ( k = LOC_MED ? b_upd_l13_l2_LOC_MED : b_upd_l13_l2_LOC_HI );

module bot_module
b:[0..MAX_BATTERY] init INITIAL_BATTERY;
l:[0..13] init INITIAL_LOCATION;
s:[HALF_SPEED..FULL_SPEED] init HALF_SPEED;
k:[LOC_LO..LOC_HI] init LOC_HI;
r:[0..8] init INITIAL_HEADING;
kr:[0..2] init 0;
robot_done:bool init false;
	[] true & (turn=RT) & (!stop) & (robot_done) -> (robot_done'=false) & (turn'=ET);

	 [l1_to_l2] (l=l1) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_l1_l2) & (r'=H_EAST) & (robot_done'=true);
	 [l2_to_l1] (l=l2) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l1)  & (b'=b_upd_l2_l1) & (r'=H_WEST) & (robot_done'=true);
	 [l2_to_c1] (l=l2) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c1)  & (b'=b_upd_l2_c1) & (r'=H_SOUTH) & (robot_done'=true);
	 [l2_to_c2] (l=l2) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c2)  & (b'=b_upd_l2_c2) & (r'=H_EAST) & (robot_done'=true);
	 [l3_to_c2] (l=l3) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c2)  & (b'=b_upd_l3_c2) & (r'=H_WEST) & (robot_done'=true);
	 [l3_to_c3] (l=l3) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c3)  & (b'=b_upd_l3_c3) & (r'=H_SOUTH) & (robot_done'=true);
	 [l3_to_l4] (l=l3) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_l3_l4) & (r'=H_EAST) & (robot_done'=true);
	 [l4_to_l3] (l=l4) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_l4_l3) & (r'=H_WEST) & (robot_done'=true);
	 [l4_to_ls] (l=l4) & (!stop) & (turn=RT) & (!robot_done) -> (l'=ls)  & (b'=b_upd_l4_ls) & (r'=H_NORTH) & (robot_done'=true);
	 [l4_to_l5] (l=l4) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l5)  & (b'=b_upd_l4_l5) & (r'=H_SOUTH) & (robot_done'=true);
	 [l5_to_l4] (l=l5) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_l5_l4) & (r'=H_NORTH) & (robot_done'=true);
	 [l5_to_l6] (l=l5) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_l5_l6) & (r'=H_WEST) & (robot_done'=true);
	 [l6_to_l5] (l=l6) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l5)  & (b'=b_upd_l6_l5) & (r'=H_EAST) & (robot_done'=true);
	 [l6_to_c3] (l=l6) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c3)  & (b'=b_upd_l6_c3) & (r'=H_NORTH) & (robot_done'=true);
	 [l6_to_c4] (l=l6) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c4)  & (b'=b_upd_l6_c4) & (r'=H_WEST) & (robot_done'=true);
	 [l7_to_c4] (l=l7) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c4)  & (b'=b_upd_l7_c4) & (r'=H_EAST) & (robot_done'=true);
	 [l7_to_c1] (l=l7) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=c1)  & (b'=b_upd_l7_c1) & (r'=H_NORTH) & (robot_done'=true);
	 [ls_to_l4] (l=ls) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_ls_l4) & (r'=H_SOUTH) & (robot_done'=true);
	 [c1_to_l2] (l=c1) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_c1_l2) & (r'=H_NORTH) & (robot_done'=true);
	 [c1_to_l7] (l=c1) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l7)  & (b'=b_upd_c1_l7) & (r'=H_SOUTH) & (robot_done'=true);
	 [c2_to_l2] (l=c2) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_c2_l2) & (r'=H_WEST) & (robot_done'=true);
	 [c2_to_l3] (l=c2) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_c2_l3) & (r'=H_EAST) & (robot_done'=true);
	 [c3_to_l3] (l=c3) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_c3_l3) & (r'=H_NORTH) & (robot_done'=true);
	 [c3_to_l6] (l=c3) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_c3_l6) & (r'=H_SOUTH) & (robot_done'=true);
	 [c4_to_l6] (l=c4) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_c4_l6) & (r'=H_EAST) & (robot_done'=true);
	 [c4_to_l7] (l=c4) & (k!=LOC_LO) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l7)  & (b'=b_upd_c4_l7) & (r'=H_WEST) & (robot_done'=true);
	 [l1_to_l13] (l=l1) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l13)  & (b'=b_upd_l1_l13) & (r'=H_EAST) & (robot_done'=true);
	 [l13_to_l1] (l=l13) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l1)  & (b'=b_upd_l13_l1) & (r'=H_WEST) & (robot_done'=true);
	 [l2_to_l13] (l=l2) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l13)  & (b'=b_upd_l2_l13) & (r'=H_WEST) & (robot_done'=true);
	 [l13_to_l2] (l=l13) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_l13_l2) & (r'=H_EAST) & (robot_done'=true);

endmodule


rewards "time"
	[l1_to_l2] true :s=HALF_SPEED? 14.2857 + rot_time_l1_to_l2 : 7.3529 + rot_time_l1_to_l2;
	[l2_to_l1] true :s=HALF_SPEED? 14.2857 + rot_time_l2_to_l1 : 7.3529 + rot_time_l2_to_l1;
	[l2_to_c1] true :s=HALF_SPEED? 11.4286 + rot_time_l2_to_c1 : 5.8824 + rot_time_l2_to_c1;
	[l2_to_c2] true :s=HALF_SPEED? 32.2857 + rot_time_l2_to_c2 : 16.6176 + rot_time_l2_to_c2;
	[l3_to_c2] true :s=HALF_SPEED? 32.5714 + rot_time_l3_to_c2 : 16.7647 + rot_time_l3_to_c2;
	[l3_to_c3] true :s=HALF_SPEED? 11.4286 + rot_time_l3_to_c3 : 5.8824 + rot_time_l3_to_c3;
	[l3_to_l4] true :s=HALF_SPEED? 27.7143 + rot_time_l3_to_l4 : 14.2647 + rot_time_l3_to_l4;
	[l4_to_l3] true :s=HALF_SPEED? 27.7143 + rot_time_l4_to_l3 : 14.2647 + rot_time_l4_to_l3;
	[l4_to_ls] true :s=HALF_SPEED? 15.4286 + rot_time_l4_to_ls : 7.9412 + rot_time_l4_to_ls;
	[l4_to_l5] true :s=HALF_SPEED? 29.1429 + rot_time_l4_to_l5 : 15.0000 + rot_time_l4_to_l5;
	[l5_to_l4] true :s=HALF_SPEED? 29.1429 + rot_time_l5_to_l4 : 15.0000 + rot_time_l5_to_l4;
	[l5_to_l6] true :s=HALF_SPEED? 27.7143 + rot_time_l5_to_l6 : 14.2647 + rot_time_l5_to_l6;
	[l6_to_l5] true :s=HALF_SPEED? 27.7143 + rot_time_l6_to_l5 : 14.2647 + rot_time_l6_to_l5;
	[l6_to_c3] true :s=HALF_SPEED? 17.7143 + rot_time_l6_to_c3 : 9.1176 + rot_time_l6_to_c3;
	[l6_to_c4] true :s=HALF_SPEED? 32.5714 + rot_time_l6_to_c4 : 16.7647 + rot_time_l6_to_c4;
	[l7_to_c4] true :s=HALF_SPEED? 32.2857 + rot_time_l7_to_c4 : 16.6176 + rot_time_l7_to_c4;
	[l7_to_c1] true :s=HALF_SPEED? 17.7143 + rot_time_l7_to_c1 : 9.1176 + rot_time_l7_to_c1;
	[ls_to_l4] true :s=HALF_SPEED? 15.4286 + rot_time_ls_to_l4 : 7.9412 + rot_time_ls_to_l4;
	[c1_to_l2] true :s=HALF_SPEED? 11.4286 + rot_time_c1_to_l2 : 5.8824 + rot_time_c1_to_l2;
	[c1_to_l7] true :s=HALF_SPEED? 17.7143 + rot_time_c1_to_l7 : 9.1176 + rot_time_c1_to_l7;
	[c2_to_l2] true :s=HALF_SPEED? 32.2857 + rot_time_c2_to_l2 : 16.6176 + rot_time_c2_to_l2;
	[c2_to_l3] true :s=HALF_SPEED? 32.5714 + rot_time_c2_to_l3 : 16.7647 + rot_time_c2_to_l3;
	[c3_to_l3] true :s=HALF_SPEED? 11.4286 + rot_time_c3_to_l3 : 5.8824 + rot_time_c3_to_l3;
	[c3_to_l6] true :s=HALF_SPEED? 17.7143 + rot_time_c3_to_l6 : 9.1176 + rot_time_c3_to_l6;
	[c4_to_l6] true :s=HALF_SPEED? 32.5714 + rot_time_c4_to_l6 : 16.7647 + rot_time_c4_to_l6;
	[c4_to_l7] true :s=HALF_SPEED? 32.2857 + rot_time_c4_to_l7 : 16.6176 + rot_time_c4_to_l7;
	[l1_to_l13] true :s=HALF_SPEED? 10.3492 + rot_time_l1_to_l13 : 5.3268 + rot_time_l1_to_l13;
	[l13_to_l1] true :s=HALF_SPEED? 10.3492 + rot_time_l13_to_l1 : 5.3268 + rot_time_l13_to_l1;
	[l2_to_l13] true :s=HALF_SPEED? 4.0282 + rot_time_l2_to_l13 : 2.0733 + rot_time_l2_to_l13;
	[l13_to_l2] true :s=HALF_SPEED? 4.0282 + rot_time_l13_to_l2 : 2.0733 + rot_time_l13_to_l2;
endrewards


// Rotation time formulas for map arcs
formula rot_time_l1_to_l2 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l2_to_l1 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l2_to_c1 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l2_to_c2 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l3_to_c2 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l3_to_c3 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l3_to_l4 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l4_to_l3 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l4_to_ls = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l4_to_l5 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l5_to_l4 = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l5_to_l6 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l6_to_l5 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l6_to_c3 = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l6_to_c4 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l7_to_c4 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_l7_to_c1 = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_ls_to_l4 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_c1_to_l2 = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_c1_to_l7 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_c2_to_l2 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_c2_to_l3 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_c3_to_l3 = r=H_NORTH ? 0.0000 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 10.4720 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_c3_to_l6 = r=H_NORTH ? 10.4720 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 5.2360 : r=H_SOUTHEAST ? -2.6180 : r=H_SOUTH ? 0.0000 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 5.2360 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_c4_to_l6 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 2.6180 : r=H_EAST ? 0.0000 : r=H_SOUTHEAST ? 2.6180 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 7.8540 : r=H_WEST ? 10.4720 : r=H_NORTHWEST ? 7.8540 :  0;
formula rot_time_c4_to_l7 = r=H_NORTH ? 5.2360 : r=H_NORTHEAST ? 7.8540 : r=H_EAST ? 10.4720 : r=H_SOUTHEAST ? 7.8540 : r=H_SOUTH ? 5.2360 : r=H_SOUTHWEST ? 2.6180 : r=H_WEST ? 0.0000 : r=H_NORTHWEST ? 2.6180 :  0;
formula rot_time_l1_to_l13 = r=H_NORTH ? 5.4703 : r=H_NORTHEAST ? 2.8523 : r=H_EAST ? 0.2343 : r=H_SOUTHEAST ? 2.3837 : r=H_SOUTH ? 5.0017 : r=H_SOUTHWEST ? 7.6197 : r=H_WEST ? 10.2377 : r=H_NORTHWEST ? 8.0883 :  0;
formula rot_time_l13_to_l1 = r=H_NORTH ? 5.0017 : r=H_NORTHEAST ? 7.6197 : r=H_EAST ? 10.2377 : r=H_SOUTHEAST ? 8.0883 : r=H_SOUTH ? 5.4703 : r=H_SOUTHWEST ? 2.8523 : r=H_WEST ? 0.2343 : r=H_NORTHWEST ? 2.3837 :  0;
formula rot_time_l2_to_l13 = r=H_NORTH ? 5.8408 : r=H_NORTHEAST ? 8.4588 : r=H_EAST ? 9.8672 : r=H_SOUTHEAST ? -7.2492 : r=H_SOUTH ? -4.6312 : r=H_SOUTHWEST ? -2.0132 : r=H_WEST ? 0.6048 : r=H_NORTHWEST ? 3.2228 :  0;
formula rot_time_l13_to_l2 = r=H_NORTH ? 4.6312 : r=H_NORTHEAST ? 2.0132 : r=H_EAST ? 0.6048 : r=H_SOUTHEAST ? 3.2228 : r=H_SOUTH ? 5.8408 : r=H_SOUTHWEST ? 8.4588 : r=H_WEST ? 9.8672 : r=H_NORTHWEST ? 7.2492 :  0;


rewards "distance"
	stop & TARGET_LOCATION=l1 : l=l2 ? 5.0000 : l=l3 ? 27.7000 : l=ls ? 42.8000 : l=l4 ? 37.4000 : l=l5 ? 47.6000 : l=l6 ? 37.9000 : l=l7 ? 15.2000 : l=c1 ? 9.0000 : l=c2 ? 16.3000 : l=l13 ? 3.6222 : l=c3 ? 31.7000 : l=c4 ? 26.5000 :  0;
	stop & TARGET_LOCATION=l2 : l=l1 ? 5.0000 : l=l3 ? 22.7000 : l=ls ? 37.8000 : l=l4 ? 32.4000 : l=l5 ? 42.6000 : l=l6 ? 32.9000 : l=l7 ? 10.2000 : l=c1 ? 4.0000 : l=c2 ? 11.3000 : l=l13 ? 1.4099 : l=c3 ? 26.7000 : l=c4 ? 21.5000 :  0;
	stop & TARGET_LOCATION=l3 : l=l1 ? 27.7000 : l=l2 ? 22.7000 : l=ls ? 15.1000 : l=l4 ? 9.7000 : l=l5 ? 19.9000 : l=l6 ? 10.2000 : l=l7 ? 32.9000 : l=c1 ? 26.7000 : l=c2 ? 11.4000 : l=l13 ? 24.1099 : l=c3 ? 4.0000 : l=c4 ? 21.6000 :  0;
	stop & TARGET_LOCATION=ls : l=l1 ? 42.8000 : l=l2 ? 37.8000 : l=l3 ? 15.1000 : l=l4 ? 5.4000 : l=l5 ? 15.6000 : l=l6 ? 25.3000 : l=l7 ? 48.0000 : l=c1 ? 41.8000 : l=c2 ? 26.5000 : l=l13 ? 39.2099 : l=c3 ? 19.1000 : l=c4 ? 36.7000 :  0;
	stop & TARGET_LOCATION=l4 : l=l1 ? 37.4000 : l=l2 ? 32.4000 : l=l3 ? 9.7000 : l=ls ? 5.4000 : l=l5 ? 10.2000 : l=l6 ? 19.9000 : l=l7 ? 42.6000 : l=c1 ? 36.4000 : l=c2 ? 21.1000 : l=l13 ? 33.8099 : l=c3 ? 13.7000 : l=c4 ? 31.3000 :  0;
	stop & TARGET_LOCATION=l5 : l=l1 ? 47.6000 : l=l2 ? 42.6000 : l=l3 ? 19.9000 : l=ls ? 15.6000 : l=l4 ? 10.2000 : l=l6 ? 9.7000 : l=l7 ? 32.4000 : l=c1 ? 38.6000 : l=c2 ? 31.3000 : l=l13 ? 44.0099 : l=c3 ? 15.9000 : l=c4 ? 21.1000 :  0;
	stop & TARGET_LOCATION=l6 : l=l1 ? 37.9000 : l=l2 ? 32.9000 : l=l3 ? 10.2000 : l=ls ? 25.3000 : l=l4 ? 19.9000 : l=l5 ? 9.7000 : l=l7 ? 22.7000 : l=c1 ? 28.9000 : l=c2 ? 21.6000 : l=l13 ? 34.3099 : l=c3 ? 6.2000 : l=c4 ? 11.4000 :  0;
	stop & TARGET_LOCATION=l7 : l=l1 ? 15.2000 : l=l2 ? 10.2000 : l=l3 ? 32.9000 : l=ls ? 48.0000 : l=l4 ? 42.6000 : l=l5 ? 32.4000 : l=l6 ? 22.7000 : l=c1 ? 6.2000 : l=c2 ? 21.5000 : l=l13 ? 11.6099 : l=c3 ? 28.9000 : l=c4 ? 11.3000 :  0;
	stop & TARGET_LOCATION=c1 : l=l1 ? 9.0000 : l=l2 ? 4.0000 : l=l3 ? 26.7000 : l=ls ? 41.8000 : l=l4 ? 36.4000 : l=l5 ? 38.6000 : l=l6 ? 28.9000 : l=l7 ? 6.2000 : l=c2 ? 15.3000 : l=l13 ? 5.4099 : l=c3 ? 30.7000 : l=c4 ? 17.5000 :  0;
	stop & TARGET_LOCATION=c2 : l=l1 ? 16.3000 : l=l2 ? 11.3000 : l=l3 ? 11.4000 : l=ls ? 26.5000 : l=l4 ? 21.1000 : l=l5 ? 31.3000 : l=l6 ? 21.6000 : l=l7 ? 21.5000 : l=c1 ? 15.3000 : l=l13 ? 12.7099 : l=c3 ? 15.4000 : l=c4 ? 32.8000 :  0;
	stop & TARGET_LOCATION=l13 : l=l1 ? 3.6222 : l=l2 ? 1.4099 : l=l3 ? 24.1099 : l=ls ? 39.2099 : l=l4 ? 33.8099 : l=l5 ? 44.0099 : l=l6 ? 34.3099 : l=l7 ? 11.6099 : l=c1 ? 5.4099 : l=c2 ? 12.7099 : l=c3 ? 28.1099 : l=c4 ? 22.9099 :  0;
	stop & TARGET_LOCATION=c3 : l=l1 ? 31.7000 : l=l2 ? 26.7000 : l=l3 ? 4.0000 : l=ls ? 19.1000 : l=l4 ? 13.7000 : l=l5 ? 15.9000 : l=l6 ? 6.2000 : l=l7 ? 28.9000 : l=c1 ? 30.7000 : l=c2 ? 15.4000 : l=l13 ? 28.1099 : l=c4 ? 17.6000 :  0;
	stop & TARGET_LOCATION=c4 : l=l1 ? 26.5000 : l=l2 ? 21.5000 : l=l3 ? 21.6000 : l=ls ? 36.7000 : l=l4 ? 31.3000 : l=l5 ? 21.1000 : l=l6 ? 11.4000 : l=l7 ? 11.3000 : l=c1 ? 17.5000 : l=c2 ? 32.8000 : l=l13 ? 22.9099 : l=c3 ? 17.6000 :  0;
endrewards


// --- End of generated code ---



module path_constraint
// Allowed arcs: [l2_to_c2, c2_to_l3, l3_to_l4, l4_to_l5, l5_to_l6]
	[l1_to_l2] false -> true; 
	[l2_to_l1] false -> true; 
	[l2_to_c1] false -> true; 
	[l3_to_c2] false -> true; 
	[l3_to_c3] false -> true; 
	[l4_to_l3] false -> true; 
	[l4_to_ls] false -> true; 
	[l5_to_l4] false -> true; 
	[l6_to_l5] false -> true; 
	[l6_to_c3] false -> true; 
	[l6_to_c4] false -> true; 
	[l7_to_c4] false -> true; 
	[l7_to_c1] false -> true; 
	[ls_to_l4] false -> true; 
	[c1_to_l2] false -> true; 
	[c1_to_l7] false -> true; 
	[c2_to_l2] false -> true; 
	[c3_to_l3] false -> true; 
	[c3_to_l6] false -> true; 
	[c4_to_l6] false -> true; 
	[c4_to_l7] false -> true; 
	[l1_to_l13] false -> true; 
	[l13_to_l1] false -> true; 
	[l2_to_l13] false -> true; 
	[l13_to_l2] false -> true; 
endmodule
